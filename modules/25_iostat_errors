#!/bin/sh

for HOST
do
   export HOST
   cat "$HOST"/disks/iostat*E*out | paste - - - - - | perl -0l12ne '
   BEGIN{ our $ok = 1; our %err = (); }
   s/\n//g;
   s/\s+/ /g;
   my ($disk, $count);
   my @arr; 

   @arr = /(\w+)\s*Soft Errors: (\d+)/g;
   while (($disk, $count) = (shift @arr, shift @arr) and defined $count) {
      next if ($count == 0);
      $err{$disk}->{soft} = $count;
      $ok = 0;
   }

   @arr = /(\w+)\s*Soft.*?Hard Errors: (\d+)/g;
   while (($disk, $count) = (shift @arr, shift @arr) and defined $count) {
      next if ($count == 0);
      $err{$disk}->{hard} = $count;
      $ok = 0;
   }

   @arr = /(\w+)\s*Soft.*?Transport Errors: (\d+)/g;
   while (($disk, $count) = (shift @arr, shift @arr) and defined $count) {
      next if ($disk == 0);
      $err{$disk}->{transport} = $disk;
      $ok = 0;
   }

   @arr = /(\w+)\s*Soft.*?Media Error: (\d+)/g;
   while (($disk, $count) = (shift @arr, shift @arr) and defined $count) {
      next if ($disk == 0);
      $err{$disk}->{media} = $disk;
      $ok = 0;
   }

   END {
   print "$ENV{HOST}/ok/iostat errors count too low" if $ok;
   for my $disk (sort keys %err) {
      printf "%s Soft: %d Hard: %d Transport: %d Media: %d\n",
      "$ENV{HOST}/warn/$disk",
      map { $err{$disk}->{$_} } ("soft", "hard", "transport", "media");
   }
   } '
done
